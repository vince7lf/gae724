# -*- coding: utf-8 -*-
"""metric-system-diagram-plot-2ndtime.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RXThiEQADimRYtppE9geTuxvpFO8HkOT
"""

# importing the required module 
import matplotlib.pyplot as plt 
  
# x axis values 
x = [1,2,3] 
# corresponding y axis values 
y = [2,4,1] 
  
# plotting the points  
plt.plot(x, y) 
  
# naming the x axis 
plt.xlabel('x - axis') 
# naming the y axis 
plt.ylabel('y - axis') 
  
# giving a title to my graph 
plt.title('My first graph!') 
  
# function to show the plot 
plt.show()

"""# New section"""



import pandas as pd
import matplotlib.pyplot as plt

plt.style.use('ggplot')

df = pd.read_csv('/content/2ndtime/free-20200722T194436.log.csv')
df.head()
#df.plot(x='unixepochtime', y=['memused'])

fig, ax = plt.subplots(figsize=(10,5))

zeroorigints = [ts - df['unixepochtime'][0] for ts in df['unixepochtime']]
ax.plot(zeroorigints, df['totaltotal'], label='Memoire totale Mbytes')
ax.plot(zeroorigints, df['totalused'], label='Memoire utilise Mbytes')
ax.plot(zeroorigints, df['totalfree'], label='Memoire libre Mbytes')

ax.axvline(x=0, color='k')
ax.axhline(y=0, color='k')

plt.legend(loc='lower right', bbox_to_anchor=(1, 0.1))
plt.show()

import pandas as pd
import numpy as np

plt.style.use('ggplot')

data = np.loadtxt('/content/2ndtime/free-20200722T194436.log.csv', delimiter=',', skiprows=1)

fig, ax = plt.subplots(figsize=(10,5))

unixepochtime = data[:,0]
totaltotal = data[:,-3]
totalused = data[:,-2]
totalfree = data[:,-1]
zeroorigints = [ts - unixepochtime[0] for ts in unixepochtime]
ax.plot(zeroorigints, totaltotal, label='Memoire totale Mbytes')
ax.plot(zeroorigints, totalused, label='Memoire utilise Mbytes')
ax.plot(zeroorigints, totalfree, label='Memoire libre Mbytes')

plt.xlabel("Periode en seconde")
plt.ylabel("Utilisation en MBytes")
ax.axvline(x=0, color='k')
ax.axhline(y=0, color='k')
plt.legend(loc='lower right', bbox_to_anchor=(1, 0.1))
plt.show()

import pandas as pd
import matplotlib.pyplot as plt

plt.style.use('ggplot')

df = pd.read_csv('/content/2ndtime/tegrastats-20200722T194436.log.48.csv')
df.head()

fig, ax = plt.subplots(figsize=(10,5))

zeroorigints = [ts - df['unixepochtime'][0] for ts in df['unixepochtime']]
ax.plot(zeroorigints, df['plltemp'], label='PLL C')
ax.plot(zeroorigints, df['cputemp'], label='CPU C')
#ax.plot(zeroorigints, df['pmictemp'], label='PMIC C')
ax.plot(zeroorigints, df['gputemp'], label='GPU C')
ax.plot(zeroorigints, df['aotemp'], label='AO C')
ax.plot(zeroorigints, df['thermal'], label='Thermal C')

plt.xlabel("Periode en seconde")
plt.ylabel("Temperatude en degre Celcius")
plt.ylim(top=45)
ax.axhline(y=0, color='k')
ax.axvline(x=0, color='k')
plt.legend(loc='lower right', bbox_to_anchor=(1, 0.1))
plt.show()

fig, ax = plt.subplots(figsize=(10,5))

zeroorigints = [ts - df['unixepochtime'][0] for ts in df['unixepochtime']]
ax.plot(zeroorigints, df['cpu1per'], label='CPU 1 %')
ax.plot(zeroorigints, df['cpu2per'], label='CPU 2 %')
ax.plot(zeroorigints, df['cpu3per'], label='CPU 3 %')
ax.plot(zeroorigints, df['cpu4per'], label='CPU 4 %')
ax.plot(zeroorigints, df['gr3dper'], label='GR3D %')
ax.plot(zeroorigints, df['emcper'], label='EMC %')

plt.xlabel("Periode en seconde")
plt.ylabel("Frequence en %")
plt.ylim(top=100)
ax.axhline(y=0, color='k')
ax.axvline(x=0, color='k')
plt.legend(loc='lower right', bbox_to_anchor=(1, 0.1))
plt.show()

fig, ax = plt.subplots(figsize=(10,5))

zeroorigints = [ts - df['unixepochtime'][0] for ts in df['unixepochtime']]
ax.plot(zeroorigints, df['pom5vincurr'], label='5V IN')
ax.plot(zeroorigints, df['pom5vinavg'], label='5V IN moy.')
ax.plot(zeroorigints, df['pom5vgpucurr'], label='5V GPU')
ax.plot(zeroorigints, df['pom5vgpuavg'], label='5V GPU moy.')
ax.plot(zeroorigints, df['pom5vcpucurr'], label='5V CPU')
ax.plot(zeroorigints, df['pom5vcpuavg'], label='5V CPU moy.')

plt.xlabel("Periode en seconde")
plt.ylabel("Consommation en millivolt")
#plt.ylim(top=100)
ax.axhline(y=0, color='k')
ax.axvline(x=0, color='k')
plt.legend(loc='lower right', bbox_to_anchor=(1, 0.1))
plt.show()

import pandas as pd
import matplotlib.pyplot as plt

plt.style.use('ggplot')

df = pd.read_csv('/content/2ndtime/iotop-20200722T194436.log.totaldisk.csv')
df.head()

fig, ax = plt.subplots(figsize=(10,5))

zeroorigints = [ts - df['unixepochtime'][0] for ts in df['unixepochtime']]
ax.plot(zeroorigints, df['totaldiskread'], label='Total disk read Kbytes')
ax.plot(zeroorigints, df['totaldiskwrwite'], label='Total disk write Kbytes')

plt.xlabel("Periode en seconde")
plt.ylabel("bandwidth between processes and kernel threads in kilobytes")
#plt.ylim(top=100)
#ax.axhline(y=0, color='k')
#ax.axvline(x=0, color='k')
plt.legend(loc='lower right', bbox_to_anchor=(1, 0.1))
plt.show()

import pandas as pd
import matplotlib.pyplot as plt

plt.style.use('ggplot')

df = pd.read_csv('/content/2ndtime/iotop-20200722T194436.log.segnet-camera.csv')
df.head()

fig, ax = plt.subplots(figsize=(10,5))

zeroorigints = [ts - df['unixepochtime'][0] for ts in df['unixepochtime']]
ax.plot(zeroorigints, df['diskread'], label='Total disk read Kbytes')
ax.plot(zeroorigints, df['diskwrite'], label='Total disk write Kbytes')

plt.xlabel("Periode en seconde")
plt.ylabel("bandwidth between processes and kernel threads in kilobytes")
#plt.ylim(top=100)
#ax.axhline(y=0, color='k')
#ax.axvline(x=0, color='k')
plt.legend(loc='lower right', bbox_to_anchor=(1, 0.1))
plt.show()

fig, ax = plt.subplots(figsize=(10,5))

zeroorigints = [ts - df['unixepochtime'][0] for ts in df['unixepochtime']]
ax.plot(zeroorigints, df['io'], label='Total disk read Kbytes')

plt.xlabel("Periode en seconde")
plt.ylabel("bandwidth between processes and kernel threads in kilobytes")
#plt.ylim(top=100)
#ax.axhline(y=0, color='k')
#ax.axvline(x=0, color='k')
plt.legend(loc='lower right', bbox_to_anchor=(1, 0.1))
plt.show()